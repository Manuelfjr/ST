m = 1
}
paste(rep(2020, 12), a, sep = '.')
values
90000/12
data
dim(data)
length(values)
data[24:]
data[24:,]
data[24:,]
dim(data)
dim(data)[1]
seq(24,dim(data)[1])
data[seq(24,dim(data)[1]),]
data[seq(25,dim(data)[1]),]
data[seq(25,(dim(data)[1]) - 6),]
data = data[seq(25,(dim(data)[1]) - 6),]
data
# Processando
igpdi = data[,2]
icms = data[,3]
tam = length(igpdi)
tam_icms = length(icmspb)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Agora dividimos os valores da arrecadados do ICMS
# pelo IGP-DI a fim de obter uma serie livre de
# dinamina inflacionaria
icmspb_d = icmspb/igpdi_d
# Aqui formatamos os dados como uma sÃ©rie temporal
icmspb_d.ts = ts(icmspb_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icmspb_d.ts)
sqrt(var(icmspb_d.ts))
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
str(igpdi)
str(icmspb)
tam = length(igpdi)
tam_icmspb = length(icmspb)
table(dados)
# Aqui dividimos todas as observações da série de preços
# por seu ultimo valor. Dessa forma, a série deflacionada
# fica a precos constantes da ultima observaçãoo.
igpdi_d = igpdi/igpdi[tam]
igpdi_d
# Agora dividimos os valores da arrecadados do ICMS
# pelo IGP-DI a fim de obter uma serie livre de
# dinamina inflacionaria
icmspb_d = icmspb/igpdi_d
# Aqui formatamos os dados como uma sÃ©rie temporal
icmspb_d.ts = ts(icmspb_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icmspb_d.ts)
sqrt(var(icmspb_d.ts))
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
icms
igpdi
tam = length(igpdi)
tam_icms = length(icmspb)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
tam_icms
tam
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
str(igpdi)
str(icmspb)
tam = length(igpdi)
tam_icmspb = length(icmspb)
tam
tam_icmspb
igpdi_d = igpdi/igpdi[tam]
igpdi_d
# Processando
igpdi = data[,2]
icms_d
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
igpdi
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
icmspb
igpdi=dados[,2]
igpdi
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
# Processando
igpdi = data[,2]*100
igpdi
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
igpdi
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
igpdi
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
View(dados)
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
icms_d.ts
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
str(igpdi)
str(icmspb)
tam = length(igpdi)
tam_icmspb = length(icmspb)
table(dados)
# Aqui dividimos todas as observações da série de preços
# por seu ultimo valor. Dessa forma, a série deflacionada
# fica a precos constantes da ultima observaçãoo.
igpdi_d = igpdi/igpdi[tam]
igpdi_d
# Agora dividimos os valores da arrecadados do ICMS
# pelo IGP-DI a fim de obter uma serie livre de
# dinamina inflacionaria
icmspb_d = icmspb/igpdi_d
# Aqui formatamos os dados como uma sÃ©rie temporal
icmspb_d.ts = ts(icmspb_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icmspb_d.ts)
sqrt(var(icmspb_d.ts))
# Gráficos
plot(icmspb_d.ts)
acf(icmspb_d.ts)
sqrt(var(icmspb_d.ts))
pacf(icmspb_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icmspb_d.ts )
plot(icms.stl)
icms.stl$trend
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
acf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
pacf(icms_d.ts)
pacf(icms_d.ts)
# Gráficos
plot(icms_d.ts)
icms_d.ts
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
library(fpp)
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
str(igpdi)
str(icmspb)
tam = length(igpdi)
tam_icmspb = length(icmspb)
table(dados)
plot(dados)
View(dados)
dados = read.table("data/igpdi_icms_pb.txt", header=T, stringsAsFactors = FALSE)
igpdi=dados[,2]
icmspb=dados[,3]
str(igpdi)
str(icmspb)
tam = length(igpdi)
tam_icmspb = length(icmspb)
plot(dados['IGPDI'])
plot(dados['ICMS'])
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
View(data)
View(data[seq(24, dim(data)[1])])
data[seq(24, dim(data)[1])]
seq(24, dim(data)[1])
data[seq(24, dim(data)[1]),]
View(data[seq(16, dim(data)[1]),])
View(data[seq(15, dim(data)[1]),])
View(data[seq(17, dim(data)[1]),])
data = data[seq(17, dim(data)[1]),]
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1993,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
#library(fastR)
library(fpp)
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data[seq(17, dim(data)[1]),])
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
data = data[seq(17, dim(data)[1]),]
url = '/home/manuel/Área de trabalho/UFPB/ST/R/data'
names = c('data_icms_igpdi.csv','ipeadata_icms.csv', 'ipeadata_igpdi.csv')
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
View(data)
View(data[seq(17, dim(data)[1]),])
View(data[seq(24, dim(data)[1]),])
View(data[seq(25, dim(data)[1]),])
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
data = data[seq(25, dim(data)[1]),]
View(data)
# Importando dados
data = read.csv(paste(url, names[1], sep = '/'), sep = ',')
data = data[seq(25, dim(data)[1]),]
# Processando
igpdi = data[,2]
icms = data[,3]
str(igpdi)
str(icms)
tam = length(igpdi)
tam_icms = length(icms)
igpdi_d = igpdi/igpdi[tam]
igpdi_d
icms_d = icms/igpdi_d
icms_d
# Formatando como serie temporal
icms_d.ts = ts(icms_d,start=c(1995,1),frequency=12)
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
pacf(icms_d.ts)
## Decomposicao da serie temporal
icms.stl = decompose( icms_d.ts )
plot(icms.stl)
icms.stl$trend
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
# Gráficos
plot(icms_d.ts)
icms_d.ts
# Estatística descritiva
summary(icms_d.ts)
sqrt(var(icms_d.ts))
# Gráficos
plot(icms_d.ts)
acf(icms_d.ts)
